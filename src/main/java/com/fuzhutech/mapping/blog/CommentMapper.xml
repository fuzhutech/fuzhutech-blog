<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fuzhutech.dao.blog.CommentMapper">
  <resultMap id="BaseResultMap" type="com.fuzhutech.pojo.blog.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_nick_name" jdbcType="VARCHAR" property="userNickName" />
    <result column="user_login_name" jdbcType="VARCHAR" property="userLoginName" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="agent" jdbcType="VARCHAR" property="agent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fuzhutech.pojo.blog.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, post_id, user_id, user_nick_name, user_login_name, ip, agent, create_time, status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fuzhutech.pojo.blog.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_comment (post_id, user_id, user_nick_name, 
      user_login_name, ip, agent, 
      create_time, status, content
      )
    values (#{postId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userNickName,jdbcType=VARCHAR}, 
      #{userLoginName,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{agent,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fuzhutech.pojo.blog.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        post_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNickName != null">
        user_nick_name,
      </if>
      <if test="userLoginName != null">
        user_login_name,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="agent != null">
        agent,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNickName != null">
        #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginName != null">
        #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        #{agent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fuzhutech.pojo.blog.Comment">
    update blog_comment
    <set>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNickName != null">
        user_nick_name = #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginName != null">
        user_login_name = #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fuzhutech.pojo.blog.Comment">
    update blog_comment
    set post_id = #{postId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_nick_name = #{userNickName,jdbcType=VARCHAR},
      user_login_name = #{userLoginName,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fuzhutech.pojo.blog.Comment">
    update blog_comment
    set post_id = #{postId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_nick_name = #{userNickName,jdbcType=VARCHAR},
      user_login_name = #{userLoginName,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, post_id, user_id, user_nick_name, user_login_name, ip, agent, create_time, 
    status, content
    from blog_comment
  </select>
  <select id="selectAllCount" resultType="java.lang.Integer">
    select count(id) count from blog_comment
  </select>
  <select id="selectByPageInfo" parameterType="PageInfo" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment inner join (select id from blog_comment order by id desc limit #{offset}, #{rows}) t2 using(id)
  </select>
  <select id="countByPageInfo" parameterType="PageInfo" resultType="java.lang.Integer">
    select count(id) count from blog_comment
  </select>
  <select id="selectByWhere" parameterType="com.fuzhutech.pojo.blog.Comment" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_comment
    <trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides="AND|OR">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER} and 
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER} and 
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER} and 
      </if>
      <if test="userNickName != null">
        user_nick_name = #{userNickName,jdbcType=VARCHAR} and 
      </if>
      <if test="userLoginName != null">
        user_login_name = #{userLoginName,jdbcType=VARCHAR} and 
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR} and 
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=VARCHAR} and 
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP} and 
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER} and 
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR} and 
      </if>
    </trim>
  </select>
  <delete id="deleteByWhere" parameterType="com.fuzhutech.pojo.blog.Comment">
    delete from blog_comment
    <where>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER} and 
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER} and 
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER} and 
      </if>
      <if test="userNickName != null">
        user_nick_name = #{userNickName,jdbcType=VARCHAR} and 
      </if>
      <if test="userLoginName != null">
        user_login_name = #{userLoginName,jdbcType=VARCHAR} and 
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR} and 
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=VARCHAR} and 
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP} and 
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER} and 
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR} and 
      </if>
    </where>
  </delete>
</mapper>