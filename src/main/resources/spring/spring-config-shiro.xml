<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <description>Shiro安全配置</description>

    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--设置自定义Realm-->
        <property name="realm" ref="shiroDbRealm"/>
        <!--将缓存管理器，交给安全管理器-->
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
        <!-- 记住密码管理 -->
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 项目自定义的Realm-->
    <bean id="shiroDbRealm" class="com.fuzhutech.shiro.blog.ShiroDbRealm">
        <!--constructor-arg index="0" name="cacheManager" ref="shiroSpringCacheManager"/>
        <constructor-arg index="1" name="matcher" ref="credentialsMatcher"/-->
        <!-- 启用身份验证缓存，即缓存AuthenticationInfo信息，默认false -->
        <property name="authenticationCachingEnabled" value="true"/>
        <!-- 缓存AuthenticationInfo信息的缓存名称 -->
        <property name="authenticationCacheName" value="authenticationCache"/>
        <!-- 缓存AuthorizationInfo信息的缓存名称 -->
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 记住密码Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <!-- 7天,采用spring el计算方便修改[细节决定成败]！ -->
        <property name="maxAge" value="#{7 * 24 * 60 * 60}"/>
    </bean>

    <!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 安全管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 默认的登陆访问url -->
        <property name="loginUrl" value="/login"/>
        <!-- 登陆成功后跳转的url -->
        <property name="successUrl" value="/index"/>
        <!-- 没有权限跳转的url -->
        <property name="unauthorizedUrl" value="/unauth"/>
        <!--property name="filterChainDefinitions">
            <value>
                /captcha.jpg = anon
                /commons/** = anon
                /static/** = anon
                /webhooks = anon
                /login = anon
                /** = user
            </value>
        </property-->
        <property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
        <property name="filters">
            <map>
                <entry key="user" value-ref="ajaxSessionFilter" />
                <entry key="anyRoles" value-ref="anyRolesAuthorizationFilter" />
                <entry key="anyPerms" value-ref="anyPermissionsAuthorizationFilter"/>
            </map>
        </property>
    </bean>

    <bean id="anyRolesAuthorizationFilter" class="com.fuzhutech.shiro.blog.wangluo.AnyRolesAuthorizationFilter"/>
    <bean id="anyPermissionsAuthorizationFilter" class="com.fuzhutech.shiro.blog.wangluo.AnyPermissionsAuthorizationFilter"/>

    <!--begin of wangluo-->
    <bean id="chainDefinitionSectionMetaSource" class="com.fuzhutech.shiro.blog.wangluo.ChainDefinitionSectionMetaSource">
        <property name="filterChainDefinitions">
            <value>
                /login.do = anon
                /logoutlogout.do = logout
                <!--
                    anon  不需要认证
                    authc 需要认证
                    user  验证通过或RememberMe登录的都可以
                -->
                /captcha.jpg = anon
                /commons/** = anon
                /static/** = anon
                /webhooks = anon
                /login = anon
                /** = anon <!--其他不拦截-->
                /admin = anyRoles[admin1,admin2]
                /admin/add = anyPerms["admin:delete","admin:add"]
            </value>
        </property>
    </bean>
    <!--end of wangluo-->

    <!-- ajax session超时时处理 -->
    <bean id="ajaxSessionFilter" class="com.fuzhutech.shiro.blog.ShiroAjaxSessionFilter"/>

    <!-- 用户授权信息Cache, 采用EhCache-->
    <!--bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean-->
    <!-- 用户授权信息Cache, 采用spring-cache, 具体请查看spring-ehcache.xml、spring-redis.xml -->
    <bean id="shiroSpringCacheManager" class="com.fuzhutech.shiro.blog.cache.ShiroSpringCacheManager">
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置全局会话超时时间 半小时 -->
        <property name="globalSessionTimeout" value="#{30 * 60 * 1000}"/>
        <!-- url上带sessionId 默认为true -->
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <property name="sessionDAO" ref="sessionDAO"/>
    </bean>

    <!-- 会话DAO 用于会话的CRUD -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <!-- Session缓存名字，默认就是shiro-activeSessionCache -->
        <property name="activeSessionsCacheName" value="activeSessionCache"/>
        <property name="cacheManager" ref="shiroSpringCacheManager"/>
    </bean>

    <!-- 在方法中 注入  securityManager ，进行代理控制 -->
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- shiro密码加密配置 -->
    <!-- 密码加密 1次md5,增强密码可修改此处 -->
    <bean id="passwordHash" class="com.fuzhutech.shiro.blog.PasswordHash">
        <property name="algorithmName" value="md5"/>
        <property name="hashIterations" value="1"/>
    </bean>

    <!-- 密码错误5次锁定半小时 -->
    <bean id="credentialsMatcher" class="com.fuzhutech.shiro.blog.RetryLimitCredentialsMatcher">
        <constructor-arg ref="shiroSpringCacheManager"/>
        <property name="retryLimitCacheName" value="halfHour"/>
        <property name="passwordHash" ref="passwordHash"/>
    </bean>

</beans>